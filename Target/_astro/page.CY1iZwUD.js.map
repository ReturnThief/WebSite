{"version":3,"file":"page.CY1iZwUD.js","sources":["../../../../../node_modules/throttles/dist/index.mjs","../../../../../node_modules/@astrojs/prefetch/dist/requestIdleCallback.js","../../../../../node_modules/@astrojs/prefetch/dist/client.js","../../astro:scripts/page.js"],"sourcesContent":["export default function (limit) {\n\tlimit = limit || 1;\n\tvar queue=[], wip=0;\n\n\tfunction toAdd(fn) {\n\t\tqueue.push(fn) > 1 || run(); // initializes if 1st\n\t}\n\n\tfunction isDone() {\n\t\twip--; // make room for next\n\t\trun();\n\t}\n\n\tfunction run() {\n\t\tif (wip < limit && queue.length > 0) {\n\t\t\tqueue.shift()(); wip++; // is now WIP\n\t\t}\n\t}\n\n\treturn [toAdd, isDone];\n}\n","function shim(callback, options) {\n  const timeout = options?.timeout ?? 50;\n  const start = Date.now();\n  return setTimeout(function() {\n    callback({\n      didTimeout: false,\n      timeRemaining: function() {\n        return Math.max(0, timeout - (Date.now() - start));\n      }\n    });\n  }, 1);\n}\nconst requestIdleCallback = window.requestIdleCallback || shim;\nvar requestIdleCallback_default = requestIdleCallback;\nexport {\n  requestIdleCallback_default as default\n};\n","import throttles from \"throttles\";\nimport requestIdleCallback from \"./requestIdleCallback.js\";\nconst events = [\"mouseenter\", \"touchstart\", \"focus\"];\nconst preloaded = /* @__PURE__ */ new Set();\nconst loadedStyles = /* @__PURE__ */ new Set();\nfunction shouldPreload({ href }) {\n  try {\n    const url = new URL(href);\n    return window.location.origin === url.origin && window.location.pathname !== url.pathname && !preloaded.has(href);\n  } catch {\n  }\n  return false;\n}\nlet parser;\nlet observer;\nfunction observe(link) {\n  preloaded.add(link.href);\n  observer.observe(link);\n  events.map((event) => link.addEventListener(event, onLinkEvent, { passive: true, once: true }));\n}\nfunction unobserve(link) {\n  observer.unobserve(link);\n  events.map((event) => link.removeEventListener(event, onLinkEvent));\n}\nfunction onLinkEvent({ target }) {\n  if (!(target instanceof HTMLAnchorElement)) {\n    return;\n  }\n  preloadHref(target);\n}\nasync function preloadHref(link) {\n  unobserve(link);\n  const { href } = link;\n  try {\n    const contents = await fetch(href).then((res) => res.text());\n    parser ||= new DOMParser();\n    const html = parser.parseFromString(contents, \"text/html\");\n    const styles = Array.from(html.querySelectorAll('link[rel=\"stylesheet\"]'));\n    await Promise.all(\n      styles.filter((el) => !loadedStyles.has(el.href)).map((el) => {\n        loadedStyles.add(el.href);\n        return fetch(el.href);\n      })\n    );\n  } catch {\n  }\n}\nfunction prefetch({\n  selector = 'a[href][rel~=\"prefetch\"]',\n  throttle = 1,\n  intentSelector = 'a[href][rel~=\"prefetch-intent\"]'\n}) {\n  if (!navigator.onLine) {\n    return Promise.reject(new Error(\"Cannot prefetch, no network connection\"));\n  }\n  if (\"connection\" in navigator) {\n    const connection = navigator.connection;\n    if (connection.saveData) {\n      return Promise.reject(new Error(\"Cannot prefetch, Save-Data is enabled\"));\n    }\n    if (/(2|3)g/.test(connection.effectiveType)) {\n      return Promise.reject(new Error(\"Cannot prefetch, network conditions are poor\"));\n    }\n  }\n  const [toAdd, isDone] = throttles(throttle);\n  observer = observer || new IntersectionObserver((entries) => {\n    entries.forEach((entry) => {\n      if (entry.isIntersecting && entry.target instanceof HTMLAnchorElement) {\n        const relAttributeValue = entry.target.getAttribute(\"rel\") || \"\";\n        let matchesIntentSelector = false;\n        if (Array.isArray(intentSelector)) {\n          matchesIntentSelector = intentSelector.some(\n            (intent) => relAttributeValue.includes(intent)\n          );\n        } else {\n          matchesIntentSelector = relAttributeValue.includes(intentSelector);\n        }\n        if (!matchesIntentSelector) {\n          toAdd(() => preloadHref(entry.target).finally(isDone));\n        }\n      }\n    });\n  });\n  requestIdleCallback(() => {\n    const links = [...document.querySelectorAll(selector)].filter(shouldPreload);\n    links.forEach(observe);\n    const intentSelectorFinal = Array.isArray(intentSelector) ? intentSelector.join(\",\") : intentSelector;\n    const intentLinks = [\n      ...document.querySelectorAll(intentSelectorFinal)\n    ].filter(shouldPreload);\n    intentLinks.forEach((link) => {\n      events.map(\n        (event) => link.addEventListener(event, onLinkEvent, { passive: true, once: true })\n      );\n    });\n  });\n}\nexport {\n  prefetch as default\n};\n","import prefetch from \"@astrojs/prefetch/client.js\"; prefetch({});"],"names":["throttles","limit","queue","wip","toAdd","fn","run","isDone","shim","callback","options","timeout","start","requestIdleCallback","requestIdleCallback_default","events","preloaded","loadedStyles","shouldPreload","href","url","parser","observer","observe","link","event","onLinkEvent","unobserve","target","preloadHref","contents","res","html","styles","el","prefetch","selector","throttle","intentSelector","connection","entries","entry","relAttributeValue","matchesIntentSelector","intent","intentSelectorFinal"],"mappings":"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","x_google_ignoreList":[0,1,2]}